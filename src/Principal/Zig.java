/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import javax.swing.ImageIcon;

/**
 *
 * @author Rafael
 */
public class Zig extends javax.swing.JFrame {

    /**
     * Creates new form Zig
     */
    public Zig() {
        initComponents();
         ImageIcon icone = new ImageIcon("resources/icone.png");
        setIconImage(icone.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Comandos ZIG");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("CÓDIGO\tEQUIPAMENTO \tDESCRIÇÃO\t\t\t                                         INFORMAÇÕES\nZIG10\tColhedora\t\tInformação da colhedora            \t\t\tColhedora deve estar em corte e esteira ligada + Velocidade + Pressão do corte de base acima do configurado. Lógica de envio: envia 3x a cada 10 seg se não acontecer a identificação nesse tempo tem problemas com o transbordo depois de 5 min envia novamente \nZIG14\tColhedora\t\tChamado da colhedora p/ transbordo                  \t \tPode ser automático ou manual no bordo por código de parada. Este registro é enviado 2 vezes, caso ninguém responda envia ZIG19\nZIG15\tCarregadeira\t\tIdentificação da carregadeira\t                                               \tRegistro enviado após acionamento de sensores \nZIG16\tColhedora\t\tConfirmação da colhedora p/ transbordo\t                             Após receber resposta do transbordo para alocação, colhedora envia esse registro de confirmação de que está com o transbordo alocado \nZIG19\tColhedora\t\tChamado da colhedora p/ transbordo\t                             Chamado da colhedora para todos transbordos que estão aguardando carregamento, pois nenhum da fila respondeu\nZIG1F\tColhedora\t\tParada de colhedora\t                                                \tEnviado quando se digita um codigo de parada \nZIG1L\tColhedora\t\tContingência p/ quebra colhedora\t                             Colhedora que está alocada quebra e digita um código de parada configurado com o codgigo especial '4' \nZIG20\tCoordenador\t\tCoordenador envia dados carreta engatada p/ caminhão\tEnvio unicast automatico \nZIG22\tTransbordo\t\tBasculamento transbordo\t                                                \tTransbordo aciona sensores de basculamento \nZIG25\tTransbordo\t\tBasculamento Transbordo para coordenador\t                \tEnviado após o zig22 e tentar localizar posição das carretas que esta sendo carregada. Contém as informações de frota, Lat e Long das carretas que esta basculando \nZIG26\tTransbordo\t\tTransbordo entrando em FILA\t                                                \tApós fazer o último basculamento, passa para “Deslocamento Vazio” e ao parar entra em estado de FILA TRANSBORDO. Este comando é enviado 1x e após 10 seg envia novamente. Caso o transbordo se desloque por qualquer motivo ele envia outra vez o comando informando que está em FILA. Outra maneira para envio desse registro é quando selecionado um código de parada especial \nZIG29\tTransbordo\t\tResposta transbordo p/ colhedora\t                             Esse registro é enviado após motorista do transbordo aceitar acompanhar a colhedora \nZIg2B\tTransbordo\t\tTransbordo Alocado Sem Chamado\t                             Transbordo segue carregamento(copia colhedora) sem alocar Colhedora corretamente. \nZIG2F\tTransbordo\t\tParada de transbordo\t                                                \tEnviado quando se digita um codigo de parada\nZIG2L\tTransbordo\t\tContingênciap/  quebra transbordo\t                             Transbordo que está alocado quebra e digita um código de parada configurado com o codgigo especial 'O' \nZIG2N\tTransbordo\t\tNegação do transbordo para atender a colhedora\tOcorre em 2 casos: - Quando o motorista seleciona “NÃO”; - Quando o transbordo se desloca estando na tela de “acompanhar colhedora” \nZIG30\tCanavieiro\t\tIdentif de registro informação do caminhão e carretas\tEnvia 4x cada 10 seg p cada transbordo que solicita UNICAST \nZIG34\tCanavieiro\t\tCaminhão canavieiro - balança entrada\t                             Enviado quando Canavieiro esta no ponto com a Cordenada referente a Balança Entrada ou quando forçado manualmente atraves do bordo\nZIG35\tCanavieiro\t\tCaminhão canavieiro - balança saída\t                             Enviado quando Canavieiro não reconhece o ponto com a Cordenada referente a Balança Saida e força manualmente o pedido atraves do bordo \nZIG36\tCanavieiro\t\tCaminhão canavieiro - balança saída\t                             Enviado quando Canavieiro esta no ponto com a Cordenada referente a Balança Saida\nZIG37\tCanavieiro\t\tEnvio dados desengate dados caminhão p/ coordenador\tEnviado quando Bordo perde sinal de Carreta Engatada no Bate-Volta \nZIG38\tCanavieiro\t\tEnvio dados de engate caminhão p/ coordenador\tEnviado quando Bordo realiza o engate de carreta no Bate-Volta\nZIG3a\tCanavieiro\t\tSolicitação de Informação do Coordenador\t                \tEnviado automático após zig38 no processo de engate no Bate-Volta \nZIG3b\tCanavieiro\t\tSolicitação de Informação de Transbordo\t                             Enviado automático após zig38 ou zig3a no processo de engate no Bate-Volta \nZIG3d\tCanavieiro\t\tCanavieiro enviando info de desengate\t                             Enviado após enviar 3x zig37 e coordenador não responder, ele envia 3x o zig3d para os transbordos alocarem as posições das carretas no bate-volta fazendo função de coordenador \nZIG3e\tCanavieiro\t\tCanavieiro solicita dados de carretas\t                             Enviado após 3x o Zig38 sem resposta solicitando informações de posição e frota de carretas no bate-volta \nZIG3K\tBalança SGIB\t\tResposta Balança Sáida\t                                                \tEnviado como confirmação para o Canavieiro das informações de carretas solicitadas \nZIG3P\tCanavieiro\t\tCaminhão canavieiro - pátio externo\t                             \tEngate (ZIG3P, 1) / desengate (ZIG3P, 0) caminhão canavieiro \nZIG3T\tCanavieiro\t\tCaminhão canavieiro - pátio externo\t                             Envio de pacote de dados do CDC na chegada ao patio externo \nZIG44\tCoordenador\t\tCordenador solicita dados\t                                                \tEnviado manualmente peo bordo ou quando se desloca por determinado tempo e para - Usado para solicitar dados de carretas e transbordo nas mudanças de areas colhidas\nZIG4P\tBalança SGIB\t\tResposta Balança a canavieiro no Patio Ext.\t                \tEnviado como resposta UNICAST para o Canavieiro indicando a disponibildade de carretas \nZIG64\tEscravo\t           \tCaminhão escravo - balança entrada\t                             Envio de informações de frota e carretas na Balança de entrada - é enviado quando Escravo esta no ponto com a Cordenada referente a Balança Entrada ou quando forçado manualmente atraves do bordo \nZIG65\tEscravo\t            \tCaminhão escravo - balança saída\t                             Enviado quando Escravo não reconhece o ponto com a Cordenada referente a Balança Saida e força manualmente o pedido atraves do bordo\nZIG66\tEscravo\t            \tCaminhão escravo - balança saída\t                             Enviado quando Escravo esta no ponto com a Cordenada referente a Balança Saida \nZIG6P\tEscravo\t           \tCaminhão escravo - pátio externo\t                             Engate / desengate caminhão escravo ");
        jTextArea1.setToolTipText("");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1270, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1270, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Zig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Zig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Zig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Zig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Zig().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
